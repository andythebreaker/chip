$date
    May 20, 2023  08:00:06
$end
$version
    TOOL:	xmsim(64)	22.03-s003
$end
$timescale
    1 ns
$end

$scope module MatrixVectorMultiplier_TB $end
$var parameter 32 !    NUM_ROWS $end
$var parameter 32 "    NUM_COLS $end
$var reg      32 #    matrix[0][0] [31:0] $end
$var reg      32 $    matrix[0][1] [31:0] $end
$var reg      32 %    matrix[0][2] [31:0] $end
$var reg      32 &    matrix[0][3] [31:0] $end
$var reg      32 '    matrix[1][0] [31:0] $end
$var reg      32 (    matrix[1][1] [31:0] $end
$var reg      32 )    matrix[1][2] [31:0] $end
$var reg      32 *    matrix[1][3] [31:0] $end
$var reg      32 +    matrix[2][0] [31:0] $end
$var reg      32 ,    matrix[2][1] [31:0] $end
$var reg      32 -    matrix[2][2] [31:0] $end
$var reg      32 .    matrix[2][3] [31:0] $end
$var reg      32 /    vector[0] [31:0] $end
$var reg      32 0    vector[1] [31:0] $end
$var reg      32 1    vector[2] [31:0] $end
$var reg      32 2    vector[3] [31:0] $end
$var reg      32 3    result [31:0] $end

$scope module dut $end
$var reg      32 4    matrix[0][0] [31:0] $end
$var reg      32 5    matrix[0][1] [31:0] $end
$var reg      32 6    matrix[0][2] [31:0] $end
$var reg      32 7    matrix[0][3] [31:0] $end
$var reg      32 8    matrix[1][0] [31:0] $end
$var reg      32 9    matrix[1][1] [31:0] $end
$var reg      32 :    matrix[1][2] [31:0] $end
$var reg      32 ;    matrix[1][3] [31:0] $end
$var reg      32 <    matrix[2][0] [31:0] $end
$var reg      32 =    matrix[2][1] [31:0] $end
$var reg      32 >    matrix[2][2] [31:0] $end
$var reg      32 ?    matrix[2][3] [31:0] $end
$var reg      32 @    vector[0] [31:0] $end
$var reg      32 A    vector[1] [31:0] $end
$var reg      32 B    vector[2] [31:0] $end
$var reg      32 C    vector[3] [31:0] $end
$var reg      32 D    result [31:0] $end
$var parameter 32 E    NUM_ROWS $end
$var parameter 32 F    NUM_COLS $end
$var reg      32 G    product [31:0] $end

$scope begin unmblk1 $end

$scope begin unmblk1 $end
$var reg      32 H    row_product [31:0] $end
$upscope $end

$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b100 F
b11 E
b100 "
b11 !
b111111100000000000000000000000 #
b1000000000000000000000000000000 $
b1000000010000000000000000000000 %
b1000000100000000000000000000000 &
b1000000101000000000000000000000 '
b1000000110000000000000000000000 (
b1000000111000000000000000000000 )
b1000001000000000000000000000000 *
b1000001000100000000000000000000 +
b1000001001000000000000000000000 ,
b1000001001100000000000000000000 -
b1000001010000000000000000000000 .
b1000001111100000000000000000000 /
b1000001111000000000000000000000 0
b1000001110100000000000000000000 1
b1000001110000000000000000000000 2
b0 3
b111111100000000000000000000000 4
b1000000000000000000000000000000 5
b1000000010000000000000000000000 6
b1000000100000000000000000000000 7
b1000000101000000000000000000000 8
b1000000110000000000000000000000 9
b1000000111000000000000000000000 :
b1000001000000000000000000000000 ;
b1000001000100000000000000000000 <
b1000001001000000000000000000000 =
b1000001001100000000000000000000 >
b1000001010000000000000000000000 ?
b1000001111100000000000000000000 @
b1000001111000000000000000000000 A
b1000001110100000000000000000000 B
b1000001110000000000000000000000 C
b0 D
b0 G
b0 H
$end
#10
